{"version":3,"sources":["components/Space.js","components/Visualiser.js","image/boy.svg","components/Boy.js","audio/1.mp3","audio/2.mp3","audio/3.mp3","audio/4.mp3","audio/5.mp3","audio/6.mp3","audio/7.mp3","audio/8.mp3","audio/9.mp3","audio/10.mp3","App.js","index.js"],"names":["Space","props","putPixel","x","y","brightness","intensity","rgb","ctx","fillStyle","fillRect","canvas","canvasRef","React","h","w","stars","prevTime","window","onresize","setCanvasExtents","this","current","getContext","makeStars","init","bind","tick","requestAnimationFrame","document","body","clientWidth","clientHeight","width","height","count","out","i","s","Math","random","z","push","clearRect","distance","length","time","elapsed","moveStars","clear","cx","cy","star","d","b","ref","className","style","background","innerWidth","innerHeight","prevProps","drawImage","Visualiser","createRef","requestRef","isPlaying","timeout","analyser","frequencyArray","updateVisualization","audioContext","AudioContext","webkitAudioContext","createAnalyser","fftSize","createMediaElementSource","audio","connect","destination","Uint8Array","frequencyBinCount","startAnimation","clearTimeout","initCanvas","setTimeout","getByteFrequencyData","bass","floor","radius","position","rotate","PI","restore","save","globalCompositeOperation","translate","drawCanvas","initAudio","pausePauseEvent","Component","Boy","state","counter","imageType","image","Image","src","boy","onload","App","play","audioObject","currentTrack","volume","playTime","Audio","handleButtonClick","setVolume","setTrackPosition","albumArray","track1","track2","track3","track4","track5","track6","track7","track8","track9","track10","progressTimer","debounceTimer","paused","startProgressInteraval","pause","clearProgressInterval","setState","duration","currentTime","toFixed","setInterval","setProgressTime","clearInterval","type","curTrack","nextTrack","removeEventListener","crossOrigin","load","addEventListener","value","slice","renderButton","onClick","onChange","strokeWidth","stroke","classNames","activeTrack","inputRange","slider","sliderContainer","track","maxValue","minValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb598d5b.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nclass Space  extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas = null;\r\n        this.ctx = null;\r\n        this.canvasRef = React.createRef();\r\n        this.h = 0;\r\n        this.w = 0;\r\n        this.stars = null;\r\n        this.prevTime = null;\r\n    }\r\n\r\n    drawImage()  {\r\n        window.onresize = () => {\r\n            this.setCanvasExtents();\r\n        };\r\n        this.canvas = this.canvasRef.current;\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.setCanvasExtents();\r\n        this.stars = this.makeStars(2000);\r\n        this.init = this.init.bind(this);\r\n        this.tick = this.tick.bind(this);\r\n        requestAnimationFrame(this.init);\r\n    };\r\n\r\n    setCanvasExtents() {\r\n        this.w = document.body.clientWidth;\r\n        this.h = document.body.clientHeight;\r\n        this.canvas.width = this.w;\r\n        this.canvas.height = this.h;\r\n    };\r\n\r\n    makeStars(count) {\r\n        const out = [];\r\n        for (let i = 0; i < count; i++) {\r\n            const s = {\r\n                x: Math.random() * 1600 - 800,\r\n                y: Math.random() * 900 - 450,\r\n                z: Math.random() * 1000\r\n            };\r\n            out.push(s);\r\n        }\r\n        return out;\r\n    };\r\n\r\n\r\n\r\n    clear() {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    };\r\n\r\n    putPixel = (x, y, brightness) => {\r\n        const intensity = brightness * 255;\r\n        const rgb = \"rgb(\" + intensity + \",\" + intensity + \",\" + intensity + \")\";\r\n        this.ctx.fillStyle = rgb;\r\n        this.ctx.fillRect(x, y, 1, 1);\r\n    };\r\n\r\n    moveStars(distance) {\r\n        const count = this.stars.length;\r\n        for (let i = 0; i < count; i++) {\r\n            const s = this.stars[i];\r\n            s.z -= distance;\r\n            while (s.z <= 1) {\r\n                s.z += 1000;\r\n            }\r\n        }\r\n    };\r\n\r\n    init(time) {\r\n        this.prevTime = time;\r\n        requestAnimationFrame(this.tick);\r\n    };\r\n\r\n    tick(time) {\r\n        let elapsed = time - this.prevTime;\r\n        this.prevTime = time;\r\n\r\n        this.moveStars(elapsed * 0.1);\r\n\r\n        this.clear();\r\n\r\n        const cx = this.w / 2;\r\n        const cy = this.h / 2;\r\n\r\n        const count = this.stars.length;\r\n        for (let i = 0; i < count; i++) {\r\n            const star = this.stars[i];\r\n\r\n            const x = cx + star.x / (star.z * 0.001);\r\n            const y = cy + star.y / (star.z * 0.001);\r\n\r\n            if (x < 0 || x >= this.w || y < 0 || y >= this.h) {\r\n                continue;\r\n            }\r\n\r\n            const d = star.z / 1000.0;\r\n            const b = 1 - d * d;\r\n\r\n            this.putPixel(x, y, b);\r\n        }\r\n\r\n        requestAnimationFrame(this.tick);\r\n    };\r\n\r\n\r\n    render(){\r\n        return (\r\n            <canvas\r\n                ref={this.canvasRef}\r\n                className={'space-element'}\r\n                style={{ background: \"transparent\" }}\r\n                width={window.innerWidth}\r\n                height={window.innerHeight}\r\n            />\r\n        );\r\n    }\r\n\r\n    componentDidMount(prevProps) {\r\n        this.drawImage();\r\n    }\r\n}\r\nexport default Space;","import React, { useRef } from \"react\";\r\n\r\nclass Visualiser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas = null;\r\n        this.ctx = null;\r\n        this.canvasRef = React.createRef();\r\n        this.requestRef = React.createRef();\r\n        this.isPlaying = false;\r\n        this.timeout = null;\r\n        this.analyser = null\r\n        this.frequencyArray = [];\r\n        this.updateVisualization = this.updateVisualization.bind(this);\r\n    }\r\n\r\n    initCanvas() {\r\n        this.canvas = this.canvasRef.current;\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.updateVisualization();\r\n    }\r\n\r\n    initAudio() {\r\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        this.analyser = audioContext.createAnalyser();\r\n        this.analyser.fftSize = 256;\r\n        const source = audioContext.createMediaElementSource(this.props.audio);\r\n        source.connect(this.analyser);\r\n        this.analyser.connect(audioContext.destination);\r\n        this.frequencyArray = new Uint8Array(this.analyser.frequencyBinCount);\r\n    }\r\n\r\n    pausePauseEvent() {\r\n        if(this.props.startAnimation) {\r\n            clearTimeout(this.timeout);\r\n            this.isPlaying = true;\r\n            this.initCanvas();\r\n        } else {\r\n            this.timeout = setTimeout(() => {\r\n                this.isPlaying = false;\r\n            },2000);\r\n        }\r\n    }\r\n\r\n    // draw the whole thing\r\n    drawCanvas() {\r\n        if (this.canvasRef.current) {\r\n            this.analyser.getByteFrequencyData(this.frequencyArray);\r\n            let bass = Math.floor(this.frequencyArray[1]); //1Hz Frequenz\r\n            let radius = 0.45 * this.canvas.width <= 450 ? -(bass * 0.25 + 0.45 * this.canvas.width) : -(bass * 0.25 + 120);\r\n            for (let i = 0; i < this.frequencyArray.length; i++) {\r\n                let position = this.frequencyArray[i];\r\n                if (i > 0) {\r\n                    // if (i < 50 && position > 100) {\r\n                    //     position = position - (100 - i*2);\r\n                    // }\r\n                    this.ctx.fillStyle = '#86c06c';\r\n                    this.ctx.fillRect(0, radius, 6, -position/3);\r\n                    this.ctx.rotate((360 / 128) * Math.PI / 180);\r\n                    // this.ctx.fillStyle = '#316851';\r\n                    // this.ctx.fillRect(0, radius, 4, -position/2);\r\n                    // this.ctx.rotate((180 / 128) * Math.PI / 180);\r\n                }\r\n            }\r\n            for (let i = 0; i < this.frequencyArray.length; i++) {\r\n                const position = this.frequencyArray[i];\r\n                if (i > 0) {\r\n                    this.ctx.fillStyle = '#86c06c';\r\n                    //this.ctx.fillStyle = '#316851';\r\n                    this.ctx.fillRect(0, radius, 6, -position/3);\r\n                    this.ctx.rotate(-(360 / 128) * Math.PI / 180);\r\n                }\r\n            }\r\n            this.ctx.restore();\r\n        }\r\n    }\r\n\r\n    updateVisualization() {\r\n        if (this.isPlaying) {\r\n            if (this.canvasRef.current) {\r\n                this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n                this.ctx.save();\r\n                this.ctx.globalCompositeOperation = 'color-dodge';\r\n                this.ctx.translate(window.innerWidth / 2, window.innerHeight / 2);\r\n\r\n                this.drawCanvas();\r\n                this.requestRef.current = requestAnimationFrame(this.updateVisualization);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <canvas\r\n                    ref={this.canvasRef}\r\n                    className={'visualiser-element'}\r\n                    style={{background: \"transparent\"}}\r\n                    width={window.innerWidth}\r\n                    height={window.innerHeight}\r\n                />\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidMount(prevProps) {\r\n        if (!prevProps || prevProps && prevProps.audio !== this.props.audio) {\r\n            this.initAudio();\r\n            this.pausePauseEvent();\r\n        }\r\n        if (!prevProps || prevProps && prevProps.startAnimation !== this.props.startAnimation) {\r\n            this.pausePauseEvent();\r\n        }\r\n    }\r\n}\r\n\r\nexport default Visualiser;\r\n","export default __webpack_public_path__ + \"static/media/boy.09e91660.svg\";","import * as React from \"react\";\r\nimport boy from '../image/boy.svg';\r\n\r\nclass Boy  extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { counter: 0 };\r\n        this.canvas = null;\r\n        this.ctx = null;\r\n        this.canvasRef = React.createRef();\r\n\r\n    }\r\n\r\n    drawImage()  {\r\n        this.canvas = this.canvasRef.current;\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        if (this.props.imageType === 'boy') {\r\n            this.image = new Image();\r\n            this.image.src = boy;\r\n            this.image.onload = () => {\r\n                this.ctx.drawImage(this.image, this.canvas.width/2 -104, this.canvas.height/2 -120, 220, 220);\r\n                this.ctx.save();\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return(\r\n            <canvas\r\n                ref={this.canvasRef}\r\n                className={'boy-element'}\r\n                style={{ background: \"transparent\" }}\r\n                width={window.innerWidth}\r\n                height={window.innerHeight}\r\n            />\r\n        );\r\n    }\r\n    componentDidMount(prevProps) {\r\n        if (!prevProps || prevProps && prevProps.startAnimation !== this.props.startAnimation) {\r\n            this.drawImage();\r\n        }\r\n    }\r\n}\r\n\r\nexport default Boy;","export default __webpack_public_path__ + \"static/media/1.552b61c6.mp3\";","export default __webpack_public_path__ + \"static/media/2.c69434d0.mp3\";","export default __webpack_public_path__ + \"static/media/3.06f37e67.mp3\";","export default __webpack_public_path__ + \"static/media/4.da4ee228.mp3\";","export default __webpack_public_path__ + \"static/media/5.bcaf96c5.mp3\";","export default __webpack_public_path__ + \"static/media/6.e9392241.mp3\";","export default __webpack_public_path__ + \"static/media/7.669dcbf8.mp3\";","export default __webpack_public_path__ + \"static/media/8.56748b33.mp3\";","export default __webpack_public_path__ + \"static/media/9.54d847f6.mp3\";","export default __webpack_public_path__ + \"static/media/10.f5ddc0c9.mp3\";","import './App.css';\r\nimport * as React from \"react\";\r\nimport './scss-variables.scss';\r\nimport Space from './components/Space';\r\nimport Visualiser from \"./components/Visualiser\";\r\nimport Boy from './components/Boy';\r\nimport {\r\n    CircularInput,\r\n    CircularTrack,\r\n    CircularProgress\r\n} from 'react-circular-input'\r\nimport track1 from \"./audio/1.mp3\";\r\nimport track2 from \"./audio/2.mp3\";\r\nimport track3 from \"./audio/3.mp3\";\r\nimport track4 from \"./audio/4.mp3\";\r\nimport track5 from \"./audio/5.mp3\";\r\nimport track6 from \"./audio/6.mp3\";\r\nimport track7 from \"./audio/7.mp3\";\r\nimport track8 from \"./audio/8.mp3\";\r\nimport track9 from \"./audio/9.mp3\";\r\nimport track10 from \"./audio/10.mp3\";\r\nimport InputRange from \"react-input-range\";\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            play: false,\r\n            audioObject: null,\r\n            currentTrack: 0,\r\n            volume: 100,\r\n        };\r\n        this.playTime = 0;\r\n        this.audio = new Audio();\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n        this.setVolume = this.setVolume.bind(this);\r\n        this.setTrackPosition = this.setTrackPosition.bind(this);\r\n        this.albumArray = [track1,track2,track3,track4,track5,track6,track7,track8,track9,track10];\r\n        this.progressTimer = null;\r\n        this.debounceTimer = null;\r\n    }\r\n\r\n\r\n    handleButtonClick() {\r\n        if (!this.audio.paused) {\r\n            this.audio.pause();\r\n            this.clearProgressInterval();\r\n        } else {\r\n            if (this.audio.src && this.audio.src.length) {\r\n                this.startProgressInteraval();\r\n                this.audio.play();\r\n            } else {\r\n                this.initAudio();\r\n            }\r\n        }\r\n        this.setState({play: true});\r\n    }\r\n\r\n    setVolume(volume) {\r\n        if(volume) {\r\n            this.setState({volume: volume});\r\n            this.audio.volume = volume/100;\r\n        } else {\r\n            this.audio.volume = this.state.volume/100;\r\n        }\r\n    }\r\n\r\n    setProgressTime() {\r\n        this.playTime = +((100 / (this.audio.duration / this.audio.currentTime))/100).toFixed(3);\r\n        this.setState({playTime: this.playTime});\r\n    }\r\n\r\n    startProgressInteraval() {\r\n        this.clearProgressInterval();\r\n        this.progressTimer = setInterval(() => {\r\n            this.setProgressTime();\r\n        }, 500);\r\n    }\r\n\r\n    clearProgressInterval() {\r\n        if(this.progressTimer) {\r\n            clearInterval(this.progressTimer);\r\n        }\r\n    }\r\n\r\n    initAudio(type) {\r\n        const curTrack = this.state.currentTrack;\r\n        let nextTrack = this.state.currentTrack;\r\n        if(type && type === 'next') {\r\n            if(curTrack < 9) {\r\n                ++nextTrack;\r\n            } else {\r\n                nextTrack = 0;\r\n            }\r\n        }\r\n        if(type && type === 'prev') {\r\n            if(curTrack <= 0) {\r\n                nextTrack = 9;\r\n            } else {\r\n                --nextTrack;\r\n            }\r\n        }\r\n        this.audio.removeEventListener(\"ended\", this.initAudio.bind(this, 'next'));\r\n        this.setState({currentTrack: nextTrack});\r\n        this.audio.src = this.albumArray[nextTrack];\r\n        this.audio.crossOrigin = \"anonymous\";\r\n        this.audio.load();\r\n        this.setState({audioObject: this.audio});\r\n        this.setVolume();\r\n        this.startProgressInteraval();\r\n        this.audio.play();\r\n        this.audio.addEventListener(\"ended\", this.initAudio.bind(this, 'next'));\r\n    }\r\n\r\n    setTrackPosition(value) {\r\n        clearTimeout(this.debounceTimer);\r\n        this.debounceTimer = setTimeout(() => {\r\n            this.setProgressTime();\r\n            let time = 0;\r\n            if (typeof(value) === 'number') {\r\n                time = this.audio.duration * value;\r\n            } else {\r\n                time = this.audio.duration * (value.slice(4, 9));\r\n            }\r\n            this.audio.currentTime = time;\r\n        }, 200);\r\n    }\r\n\r\n    render() {\r\n        const renderButton = () => {\r\n            if (this.audio && !this.audio.paused) {\r\n                return (\r\n                    <p className=\"startButton\" onClick={this.handleButtonClick}>PAUSE</p>\r\n                );\r\n            }\r\n            return(<p className=\"startButton\" onClick={this.handleButtonClick}>PLAY</p>);\r\n        };\r\n\r\n        const volumeEl = () => {\r\n            return(\r\n                <CircularInput className={'volumeSwitcher'} value={this.state.volume/100} onChange={this.setVolume} radius={150}>\r\n                    <CircularTrack strokeWidth={4} stroke=\"#86c06c\"/>\r\n                    <CircularProgress strokeWidth={10} stroke=\"#dff8d0\"/>\r\n                </CircularInput>\r\n            )};\r\n\r\n        if (this.state.play) {\r\n            return (\r\n                <div className=\"App\" >\r\n                    <Space />\r\n                    <Visualiser startAnimation={this.state.play} audio={this.state.audioObject}/>\r\n                    <Boy imageType='boy' startAnimation={this.state.play} />\r\n\r\n                    <CircularInput className={'progressSwitcher'} value={this.playTime} onChange={this.setTrackPosition} radius={166}>\r\n                        <CircularTrack strokeWidth={4} stroke=\"#86c06c\"/>\r\n                        <CircularProgress strokeWidth={10} stroke=\"#dff8d0\"/>\r\n                    </CircularInput>\r\n                    <InputRange\r\n                        classNames={{\r\n                            activeTrack: 'input-range__track input-range__track--active',\r\n                            inputRange: 'input-range volumeSwitcher',\r\n                            slider: 'input-range__slider',\r\n                            sliderContainer: 'input-range__slider-container',\r\n                            track: 'input-range__track input-range__track--background'\r\n                        }}\r\n                        maxValue={100}\r\n                        minValue={0}\r\n                        value={this.state.volume}\r\n                        onChange={this.setVolume} />\r\n                    {renderButton()}\r\n                    <span className={\"switcher next material-icons md-48\"} onClick={this.initAudio.bind(this, 'next')}>\r\n                        arrow_forward_ios\r\n                    </span>\r\n                    <span className={\"switcher prev material-icons md-48\"} onClick={this.initAudio.bind(this, 'prev')}>\r\n                        arrow_back_ios\r\n                    </span>\r\n\r\n                </div>\r\n            )\r\n        } else {\r\n           return (\r\n               <div className=\"App\" >\r\n                   <Space />\r\n                   {renderButton()}\r\n               </div>\r\n           );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}